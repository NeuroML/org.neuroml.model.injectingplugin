<project name="neuroml-api" default="dist" basedir=".">

    <property name="project.name" value="org.neuroml.model" />
	<property name="build.version" value="1.4" />

    <property name="debug" value="on" />    
	
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />
	<property name="docs.dir" value="docs" />
    <property name="conf.dir" value="conf" />
    <property name="dist.dir" value="dist" />
	
    <property name="dist.source.dir" value="${dist.dir}/source" />	
    <property name="dist.binary.dir" value="${dist.dir}/binary" />		
	
	<property name="build.dir" value="build" />
	<property name="build.out.dir" value="${build.dir}/classes" />	
	<property name="build.temp.dir" value="${build.dir}/temp" />	
    <property name="build.jar.dir" value="${build.dir}/jar" />
	<property name="build.docs.dir" value="${build.dir}/docs" />		
	
    <property name="build.out.api.dir" value="${build.dir}/api/classes" />
   	<property name="build.src.api.dir" value="${build.dir}/api/src" />

    <property name="jar.name" value="org.neuroml.model" />
    	
   	<path id="compile.classpath">
 	   <fileset dir="${lib.dir}">
            <include name="*.jar" />
       </fileset>
	</path>    	
	
	<taskdef name="xjc" classname="org.jvnet.jaxb2_commons.xjc.XJC2Task">
		<!-- XJC2 Task classpath -->
		<classpath>
			<fileset dir="${basedir}/lib">
				<include name="activation-*.jar"/>
				<include name="jaxb-api-*.jar"/>
				<include name="jaxb-impl-*.jar"/>
				<include name="jsr173_api-*.jar"/>
				<include name="stax-api-*.jar"/>

				<include name="jaxb-xjc-*.jar"/>
				<include name="jaxb2-basics-ant-*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
            	
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${build.dir}" />
        	<fileset dir="${dist.dir}" />
        </delete>
    </target>

    <target name="init">
    	<mkdir dir="${dist.dir}" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.jar.dir}" />
        <mkdir dir="${build.out.dir}" />
        <mkdir dir="${build.temp.dir}" />   
    </target>
    
	<!-- Targets for building and running unit tests -->
    <target name="compile" depends="api-compile">
        <javac debug="${debug}" destdir="${build.out.dir}">
        	<classpath>
        		<fileset dir="${lib.dir}">
        	       	<include name="*.jar" />
        		</fileset>	
        		<pathelement path="${build.out.api.dir}-v${build.version}"/>
        	</classpath>
            <src path="${src.dir}" />
        </javac>
    </target>	
	<target name="test" depends="api-jar">
			<java classname="neuroml.test.AllTests" fork="true">
				<classpath>
		 			<pathelement location="${build.jar.dir}/${jar.name}-v${build.version}.jar"/>
					<fileset dir="${lib.dir}">
			        	<include name="*.jar" />
					</fileset>	
					<pathelement path="${build.out.dir}"/>
                </classpath>
				<arg value="${conf.dir}"/>
				<arg value="${build.temp.dir}"/>
			</java>
	</target>	

	<!-- Targets for API generation, compilation, documentation, and packaging -->	
	<target name="api-generate" depends="init">			
			<mkdir dir="${build.src.api.dir}-v${build.version}" />
			<xjc destdir="${build.src.api.dir}-v${build.version}">			
				<arg value="-Xneuroml-codeinjector" />
			 	<schema dir="${conf.dir}/Level1" includes="Metadata_v${build.version}.xsd"/>				
				<schema dir="${conf.dir}/Level1" includes="MorphML_v${build.version}.xsd"/>				
				<schema dir="${conf.dir}/Level2" includes="Biophysics_v${build.version}.xsd"/>	
				<schema dir="${conf.dir}/Level2" includes="ChannelML_v${build.version}.xsd"/>	
				<schema dir="${conf.dir}/Level3" includes="NetworkML_v${build.version}.xsd"/>	
				<schema dir="${conf.dir}/Level3" includes="NeuroML_Level3_v${build.version}.xsd"/>	

				<binding dir="${conf.dir}" includes="neuroml-api-v${build.version}.xjb"/>
				<produces dir="${build.src.api.dir}-v${build.version}" includes="**/*" />
		    </xjc>			
	</target>	
	<target name="api-compile" depends="api-generate">
			<mkdir dir="${build.out.api.dir}-v${build.version}" />
	        <javac
	        	debug="${debug}" classpathref="compile.classpath"
	        	destdir="${build.out.api.dir}-v${build.version}">
	            <src path="${build.src.api.dir}-v${build.version}" />
	        </javac>
    </target>	
	<target name="api-javadoc" depends="api-jar">
			<mkdir dir="${build.docs.dir}-v${build.version}/api" />
			<javadoc   destdir="${build.docs.dir}-v${build.version}/api"
			           author="false"
			           version="true"
			           use="true"
			           windowtitle="neuroml-api (v${build.version}): JavaDocs"
	   	           	   classpathref="compile.classpath">
			    <packageset dir="${build.src.api.dir}-v${build.version}" defaultexcludes="yes">
			      <include name="*/**"/>
			    </packageset>
				<packageset dir="${src.dir}" defaultexcludes="yes">
  		        	<include name="neuroml/util/**"/>
			    </packageset>

			    <doctitle>neuroml-api (v${build.version}) javadocs</doctitle>
			    <bottom>NeuroML API (v${build.version})</bottom>
		  </javadoc>
	</target>
    <target name="api-jar" depends="compile">
        <jar destfile="${build.jar.dir}/${jar.name}-v${build.version}.jar">
        	<fileset dir="${build.out.api.dir}-v${build.version}" includes="*/**"/>
        	<fileset dir="${build.out.dir}" includes="neuroml/util/**"/>
       	</jar>
    </target>
	<target name="doc" depends="api-javadoc">
		<copy todir="${build.docs.dir}-v${build.version}">
			<fileset dir="${docs.dir}" />
		</copy>
	</target>
		
	<target name="dist-source" depends="doc">		
		<!-- Build source distribution -->
		<mkdir dir="${dist.source.dir}/${jar.name}-src" />
		<copy todir="${dist.source.dir}/${jar.name}-src/lib" >
			<fileset dir="${lib.dir}" />
		</copy>
		<copy todir="${dist.source.dir}/${jar.name}-src/conf" >
			<fileset dir="${conf.dir}" />
		</copy>
		<copy todir="${dist.source.dir}/${jar.name}-src/src" >
			<fileset dir="${src.dir}" />
		</copy>
		<copy todir="${dist.source.dir}/${jar.name}-src/docs" >
			<fileset dir="${docs.dir}" />
		</copy>		
		
		<copy todir="${dist.source.dir}/${jar.name}-src" file="build.xml"/>
		
		<zip destfile="${dist.dir}/${jar.name}-src-v${build.version}.zip" basedir="${dist.source.dir}" />
		<tar destfile="${dist.dir}/${jar.name}-src-v${build.version}.tgz" basedir="${dist.source.dir}" compression="gzip"/>	
	</target>
	
	<target name="dist-binary" depends="doc">				
		<!-- Build binary distribution -->
		<property name="bdir.name" value="${jar.name}-v${build.version}" />
		
		<mkdir dir="${dist.binary.dir}/${bdir.name}" />
		<copy todir="${dist.binary.dir}/${bdir.name}/docs" >
			<fileset dir="${docs.dir}" />
		</copy>				
		<copy todir="${dist.binary.dir}/${bdir.name}/docs/api" >		
			<fileset dir="${build.docs.dir}-v${build.version}/api" />
		</copy>			
		<copy file="${lib.dir}/jaxb-api.jar" todir="${dist.binary.dir}/${bdir.name}" />
		<copy file="${lib.dir}/jaxb-impl.jar" todir="${dist.binary.dir}/${bdir.name}" />
		<copy file="${lib.dir}/activation.jar" todir="${dist.binary.dir}/${bdir.name}" />
		<copy file="${lib.dir}/jsr173_api.jar" todir="${dist.binary.dir}/${bdir.name}" />
		<copy file="${build.jar.dir}/${bdir.name}.jar" todir="${dist.binary.dir}/${bdir.name}" />
		
		<zip destfile="${dist.dir}/${bdir.name}.zip" basedir="${dist.binary.dir}"/>
		<tar destfile="${dist.dir}/${bdir.name}.tgz" basedir="${dist.binary.dir}" compression="gzip"/>
		
	</target>
	
	<target name="dist" depends="dist-source,dist-binary" />

	<target name="jaxb-plugin-jar" depends="init">
		<mkdir dir="${build.temp.dir}/neuroml-jaxb-plugin" />
		<mkdir dir="${build.temp.dir}/neuroml-jaxb-plugin/META-INF" />
		<mkdir dir="${build.temp.dir}/neuroml-jaxb-plugin/META-INF/services" />
		<copy file="${conf.dir}/jaxb/com.sun.tools.xjc.Plugin"
		      todir="${build.temp.dir}/neuroml-jaxb-plugin/META-INF/services" />		
		<javac debug="${debug}" classpathref="compile.classpath"
			   destdir="${build.temp.dir}/neuroml-jaxb-plugin">
			<include name="org/neuroml/model/jaxb/*.java"/>
	        <src path="${src.dir}" />
        </javac>
		<jar basedir="${build.temp.dir}/neuroml-jaxb-plugin"
	    	 destfile="${lib.dir}/neuroml-jaxb-plugin.jar"
			 includes="**/*" />
	</target>
	
</project>